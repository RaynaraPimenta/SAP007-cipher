const cipher = {

  encode:
    function (numDeslocamento, msgUsuario) {
if (typeof numDeslocamento !== "number" || !isNaN(Number(msgUsuario))){
        throw TypeError("deslocamento precisa ser n√∫mero")
      }
      let msgCifrada = "";                                               // tem que come√ßar com espa√ßo vazio para ele entender quando come√ßar a colocar elementos novos                                        
      for (let i = 0; i < msgUsuario.length; i++) {                      // come√ßa a ler na posi√ß√£o 0, vai lendo de 1 em 1 posi√ß√£o, para quando a ultima posi√ß√£o for 0, ou seja, quando n√£o tiver mais nada 
        let cifrando = msgUsuario[i].charCodeAt();                       // o que √© escrito na caixa de texto precisa ser identificado no c√≥digo por sua numera√ß√£o
        if (cifrando >= 32 && cifrando <= 126) {                           
          cifrando = ((cifrando - 32 + numDeslocamento) % 95) + 32          
        }
       /* else if (cifrando >= 0 && cifrando <= 32){        
           let msgUsuario = msgUsuario.unshift("üî∑", "‚ù§", "‚ö°", "‚≠ê", "üòò", "üòÇ", "üíã", "üòÄ", "üéâ", "ü§™", "üåπ", "üë®‚Äç‚ù§Ô∏è‚Äçüë®", "üòù", "üíû", "üíë", "üòÅ", "üíñ", "üòé", "üç∞", "üòú", "üòá", "üë©‚Äç‚ù§Ô∏è‚Äçüë©", "ü§©", "üòè", "ü§ó", "üôÇ", "üíï", "üòô", "üòó", "üòç", "üòã", "ü•∞")                           
          cifrando = ((cifrando - 0 + numDeslocamento) % 33) + 0
          }*/
        msgCifrada += String.fromCharCode(cifrando);                     //joga o resultado da cifra dentro do espa√ßo na msgCifrada
      }
      console.log(msgCifrada)
      return msgCifrada;                                                  //mostra a mensagem cifrada                                                       
    },
       
  decode:
    function (numDeslocamento, msgUsuario) {
      if (typeof numDeslocamento !== "number" || !isNaN(Number(msgUsuario))) {
        throw TypeError("deslocamento precisa ser n√∫mero")
      }
      let msgDecifrada = "";
      for (let i = 0; i < msgUsuario.length; i++) {
        let decifrando = msgUsuario[i].charCodeAt();
        if (decifrando >= 32 && decifrando <= 126) {
          decifrando = ((decifrando - 32 - numDeslocamento)% 95) + 32
        }
       /* else if (decifrando >= 0 && decifrando <= 32){        //acicionar caracteres especiais nas posi√ß√µes 0 -32 ainda n√£o deu certo (‚î¨‚î¨Ôπè‚î¨‚î¨)
          let msgUsuario = msgUsuario.unshift("üî∑", "‚ù§", "‚ö°", "‚≠ê", "üòò", "üòÇ", "üíã", "üòÄ", "üéâ", "ü§™", "üåπ", "üë®‚Äç‚ù§Ô∏è‚Äçüë®", "üòù", "üíû", "üíë", "üòÅ", "üíñ", "üòé", "üç∞", "üòú", "üòá", "üë©‚Äç‚ù§Ô∏è‚Äçüë©", "ü§©", "üòè", "ü§ó", "üôÇ", "üíï", "üòô", "üòó", "üòç", "üòã", "ü•∞")                           
          decifrando = ((decifrando - 0 + numDeslocamento) % 33) + 0
          }*/
        msgDecifrada += String.fromCharCode(decifrando);
      }
      console.log(msgDecifrada);
      return msgDecifrada;
    }
};
export default cipher;
 